//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("coffeeModel", "FK_Options_Recipe", "Recipe", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SLTest.Models.Recipe), "Options", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SLTest.Models.Options), true)]
[assembly: EdmRelationshipAttribute("coffeeModel", "FK_OrderOptions_Options", "Options", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SLTest.Models.Options), "OrderOptions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SLTest.Models.OrderOptions), true)]
[assembly: EdmRelationshipAttribute("coffeeModel", "FK_OrderOptions_Order", "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SLTest.Models.Order), "OrderOptions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SLTest.Models.OrderOptions), true)]
[assembly: EdmRelationshipAttribute("coffeeModel", "FK_OrderRecipe_Order", "Order", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SLTest.Models.Order), "OrderRecipe", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SLTest.Models.OrderRecipe), true)]
[assembly: EdmRelationshipAttribute("coffeeModel", "FK_OrderRecipe_Recipe", "Recipe", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SLTest.Models.Recipe), "OrderRecipe", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SLTest.Models.OrderRecipe), true)]
[assembly: EdmRelationshipAttribute("coffeeModel", "FK_itCart_Options", "Options", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SLTest.Models.Options), "itCart", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SLTest.Models.itCart), true)]
[assembly: EdmRelationshipAttribute("coffeeModel", "FK_itCart_Recipe", "Recipe", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SLTest.Models.Recipe), "itCart", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SLTest.Models.itCart), true)]
[assembly: EdmRelationshipAttribute("coffeeModel", "FK_itCart_shipTo", "shipTo", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SLTest.Models.shipTo), "itCart", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SLTest.Models.itCart), true)]

#endregion

namespace SLTest.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class coffeeEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new coffeeEntities object using the connection string found in the 'coffeeEntities' section of the application configuration file.
        /// </summary>
        public coffeeEntities() : base("name=coffeeEntities", "coffeeEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new coffeeEntities object.
        /// </summary>
        public coffeeEntities(string connectionString) : base(connectionString, "coffeeEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new coffeeEntities object.
        /// </summary>
        public coffeeEntities(EntityConnection connection) : base(connection, "coffeeEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Options> Options
        {
            get
            {
                if ((_Options == null))
                {
                    _Options = base.CreateObjectSet<Options>("Options");
                }
                return _Options;
            }
        }
        private ObjectSet<Options> _Options;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Order> Order
        {
            get
            {
                if ((_Order == null))
                {
                    _Order = base.CreateObjectSet<Order>("Order");
                }
                return _Order;
            }
        }
        private ObjectSet<Order> _Order;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OrderOptions> OrderOptions
        {
            get
            {
                if ((_OrderOptions == null))
                {
                    _OrderOptions = base.CreateObjectSet<OrderOptions>("OrderOptions");
                }
                return _OrderOptions;
            }
        }
        private ObjectSet<OrderOptions> _OrderOptions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OrderRecipe> OrderRecipe
        {
            get
            {
                if ((_OrderRecipe == null))
                {
                    _OrderRecipe = base.CreateObjectSet<OrderRecipe>("OrderRecipe");
                }
                return _OrderRecipe;
            }
        }
        private ObjectSet<OrderRecipe> _OrderRecipe;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Recipe> Recipe
        {
            get
            {
                if ((_Recipe == null))
                {
                    _Recipe = base.CreateObjectSet<Recipe>("Recipe");
                }
                return _Recipe;
            }
        }
        private ObjectSet<Recipe> _Recipe;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<itCart> itCart
        {
            get
            {
                if ((_itCart == null))
                {
                    _itCart = base.CreateObjectSet<itCart>("itCart");
                }
                return _itCart;
            }
        }
        private ObjectSet<itCart> _itCart;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<shipTo> shipTo
        {
            get
            {
                if ((_shipTo == null))
                {
                    _shipTo = base.CreateObjectSet<shipTo>("shipTo");
                }
                return _shipTo;
            }
        }
        private ObjectSet<shipTo> _shipTo;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Options EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOptions(Options options)
        {
            base.AddObject("Options", options);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Order EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrder(Order order)
        {
            base.AddObject("Order", order);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OrderOptions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrderOptions(OrderOptions orderOptions)
        {
            base.AddObject("OrderOptions", orderOptions);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OrderRecipe EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrderRecipe(OrderRecipe orderRecipe)
        {
            base.AddObject("OrderRecipe", orderRecipe);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Recipe EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRecipe(Recipe recipe)
        {
            base.AddObject("Recipe", recipe);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the itCart EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToitCart(itCart itCart)
        {
            base.AddObject("itCart", itCart);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the shipTo EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToshipTo(shipTo shipTo)
        {
            base.AddObject("shipTo", shipTo);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="coffeeModel", Name="itCart")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class itCart : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new itCart object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="drink">Initial value of the drink property.</param>
        /// <param name="opt">Initial value of the opt property.</param>
        /// <param name="num">Initial value of the num property.</param>
        /// <param name="shipToID">Initial value of the shipToID property.</param>
        public static itCart CreateitCart(global::System.Int64 id, global::System.Int64 drink, global::System.Int64 opt, global::System.Int16 num, global::System.Int64 shipToID)
        {
            itCart itCart = new itCart();
            itCart.ID = id;
            itCart.drink = drink;
            itCart.opt = opt;
            itCart.num = num;
            itCart.shipToID = shipToID;
            return itCart;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 drink
        {
            get
            {
                return _drink;
            }
            set
            {
                OndrinkChanging(value);
                ReportPropertyChanging("drink");
                _drink = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("drink");
                OndrinkChanged();
            }
        }
        private global::System.Int64 _drink;
        partial void OndrinkChanging(global::System.Int64 value);
        partial void OndrinkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 opt
        {
            get
            {
                return _opt;
            }
            set
            {
                OnoptChanging(value);
                ReportPropertyChanging("opt");
                _opt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("opt");
                OnoptChanged();
            }
        }
        private global::System.Int64 _opt;
        partial void OnoptChanging(global::System.Int64 value);
        partial void OnoptChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 num
        {
            get
            {
                return _num;
            }
            set
            {
                OnnumChanging(value);
                ReportPropertyChanging("num");
                _num = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("num");
                OnnumChanged();
            }
        }
        private global::System.Int16 _num;
        partial void OnnumChanging(global::System.Int16 value);
        partial void OnnumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 shipToID
        {
            get
            {
                return _shipToID;
            }
            set
            {
                OnshipToIDChanging(value);
                ReportPropertyChanging("shipToID");
                _shipToID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("shipToID");
                OnshipToIDChanged();
            }
        }
        private global::System.Int64 _shipToID;
        partial void OnshipToIDChanging(global::System.Int64 value);
        partial void OnshipToIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("coffeeModel", "FK_itCart_Options", "Options")]
        public Options Options
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Options>("coffeeModel.FK_itCart_Options", "Options").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Options>("coffeeModel.FK_itCart_Options", "Options").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Options> OptionsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Options>("coffeeModel.FK_itCart_Options", "Options");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Options>("coffeeModel.FK_itCart_Options", "Options", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("coffeeModel", "FK_itCart_Recipe", "Recipe")]
        public Recipe Recipe
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Recipe>("coffeeModel.FK_itCart_Recipe", "Recipe").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Recipe>("coffeeModel.FK_itCart_Recipe", "Recipe").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Recipe> RecipeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Recipe>("coffeeModel.FK_itCart_Recipe", "Recipe");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Recipe>("coffeeModel.FK_itCart_Recipe", "Recipe", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("coffeeModel", "FK_itCart_shipTo", "shipTo")]
        public shipTo shipTo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<shipTo>("coffeeModel.FK_itCart_shipTo", "shipTo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<shipTo>("coffeeModel.FK_itCart_shipTo", "shipTo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<shipTo> shipToReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<shipTo>("coffeeModel.FK_itCart_shipTo", "shipTo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<shipTo>("coffeeModel.FK_itCart_shipTo", "shipTo", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="coffeeModel", Name="Options")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Options : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Options object.
        /// </summary>
        /// <param name="optID">Initial value of the OptID property.</param>
        /// <param name="recID">Initial value of the RecID property.</param>
        /// <param name="optionName">Initial value of the OptionName property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        public static Options CreateOptions(global::System.Int64 optID, global::System.Int64 recID, global::System.String optionName, global::System.Decimal price)
        {
            Options options = new Options();
            options.OptID = optID;
            options.RecID = recID;
            options.OptionName = optionName;
            options.Price = price;
            return options;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 OptID
        {
            get
            {
                return _OptID;
            }
            set
            {
                if (_OptID != value)
                {
                    OnOptIDChanging(value);
                    ReportPropertyChanging("OptID");
                    _OptID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OptID");
                    OnOptIDChanged();
                }
            }
        }
        private global::System.Int64 _OptID;
        partial void OnOptIDChanging(global::System.Int64 value);
        partial void OnOptIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RecID
        {
            get
            {
                return _RecID;
            }
            set
            {
                OnRecIDChanging(value);
                ReportPropertyChanging("RecID");
                _RecID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RecID");
                OnRecIDChanged();
            }
        }
        private global::System.Int64 _RecID;
        partial void OnRecIDChanging(global::System.Int64 value);
        partial void OnRecIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OptionName
        {
            get
            {
                return _OptionName;
            }
            set
            {
                OnOptionNameChanging(value);
                ReportPropertyChanging("OptionName");
                _OptionName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OptionName");
                OnOptionNameChanged();
            }
        }
        private global::System.String _OptionName;
        partial void OnOptionNameChanging(global::System.String value);
        partial void OnOptionNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Decimal _Price;
        partial void OnPriceChanging(global::System.Decimal value);
        partial void OnPriceChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("coffeeModel", "FK_Options_Recipe", "Recipe")]
        public Recipe Recipe
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Recipe>("coffeeModel.FK_Options_Recipe", "Recipe").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Recipe>("coffeeModel.FK_Options_Recipe", "Recipe").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Recipe> RecipeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Recipe>("coffeeModel.FK_Options_Recipe", "Recipe");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Recipe>("coffeeModel.FK_Options_Recipe", "Recipe", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("coffeeModel", "FK_OrderOptions_Options", "OrderOptions")]
        public EntityCollection<OrderOptions> OrderOptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderOptions>("coffeeModel.FK_OrderOptions_Options", "OrderOptions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderOptions>("coffeeModel.FK_OrderOptions_Options", "OrderOptions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("coffeeModel", "FK_itCart_Options", "itCart")]
        public EntityCollection<itCart> itCart
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<itCart>("coffeeModel.FK_itCart_Options", "itCart");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<itCart>("coffeeModel.FK_itCart_Options", "itCart", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="coffeeModel", Name="Order")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Order : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Order object.
        /// </summary>
        /// <param name="orderID">Initial value of the OrderID property.</param>
        /// <param name="clientID">Initial value of the ClientID property.</param>
        /// <param name="numTable">Initial value of the NumTable property.</param>
        /// <param name="orderDateTime">Initial value of the OrderDateTime property.</param>
        /// <param name="comment">Initial value of the Comment property.</param>
        public static Order CreateOrder(global::System.Int64 orderID, global::System.Int64 clientID, global::System.Int32 numTable, global::System.DateTime orderDateTime, global::System.String comment)
        {
            Order order = new Order();
            order.OrderID = orderID;
            order.ClientID = clientID;
            order.NumTable = numTable;
            order.OrderDateTime = orderDateTime;
            order.Comment = comment;
            return order;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 OrderID
        {
            get
            {
                return _OrderID;
            }
            set
            {
                if (_OrderID != value)
                {
                    OnOrderIDChanging(value);
                    ReportPropertyChanging("OrderID");
                    _OrderID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OrderID");
                    OnOrderIDChanged();
                }
            }
        }
        private global::System.Int64 _OrderID;
        partial void OnOrderIDChanging(global::System.Int64 value);
        partial void OnOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ClientID
        {
            get
            {
                return _ClientID;
            }
            set
            {
                OnClientIDChanging(value);
                ReportPropertyChanging("ClientID");
                _ClientID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClientID");
                OnClientIDChanged();
            }
        }
        private global::System.Int64 _ClientID;
        partial void OnClientIDChanging(global::System.Int64 value);
        partial void OnClientIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumTable
        {
            get
            {
                return _NumTable;
            }
            set
            {
                OnNumTableChanging(value);
                ReportPropertyChanging("NumTable");
                _NumTable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumTable");
                OnNumTableChanged();
            }
        }
        private global::System.Int32 _NumTable;
        partial void OnNumTableChanging(global::System.Int32 value);
        partial void OnNumTableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime OrderDateTime
        {
            get
            {
                return _OrderDateTime;
            }
            set
            {
                OnOrderDateTimeChanging(value);
                ReportPropertyChanging("OrderDateTime");
                _OrderDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderDateTime");
                OnOrderDateTimeChanged();
            }
        }
        private global::System.DateTime _OrderDateTime;
        partial void OnOrderDateTimeChanging(global::System.DateTime value);
        partial void OnOrderDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("coffeeModel", "FK_OrderOptions_Order", "OrderOptions")]
        public EntityCollection<OrderOptions> OrderOptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderOptions>("coffeeModel.FK_OrderOptions_Order", "OrderOptions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderOptions>("coffeeModel.FK_OrderOptions_Order", "OrderOptions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("coffeeModel", "FK_OrderRecipe_Order", "OrderRecipe")]
        public EntityCollection<OrderRecipe> OrderRecipe
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderRecipe>("coffeeModel.FK_OrderRecipe_Order", "OrderRecipe");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderRecipe>("coffeeModel.FK_OrderRecipe_Order", "OrderRecipe", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="coffeeModel", Name="OrderOptions")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrderOptions : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OrderOptions object.
        /// </summary>
        /// <param name="orderOptID">Initial value of the OrderOptID property.</param>
        /// <param name="orderID">Initial value of the OrderID property.</param>
        /// <param name="optID">Initial value of the OptID property.</param>
        public static OrderOptions CreateOrderOptions(global::System.Int64 orderOptID, global::System.Int64 orderID, global::System.Int64 optID)
        {
            OrderOptions orderOptions = new OrderOptions();
            orderOptions.OrderOptID = orderOptID;
            orderOptions.OrderID = orderID;
            orderOptions.OptID = optID;
            return orderOptions;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 OrderOptID
        {
            get
            {
                return _OrderOptID;
            }
            set
            {
                if (_OrderOptID != value)
                {
                    OnOrderOptIDChanging(value);
                    ReportPropertyChanging("OrderOptID");
                    _OrderOptID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OrderOptID");
                    OnOrderOptIDChanged();
                }
            }
        }
        private global::System.Int64 _OrderOptID;
        partial void OnOrderOptIDChanging(global::System.Int64 value);
        partial void OnOrderOptIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 OrderID
        {
            get
            {
                return _OrderID;
            }
            set
            {
                OnOrderIDChanging(value);
                ReportPropertyChanging("OrderID");
                _OrderID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderID");
                OnOrderIDChanged();
            }
        }
        private global::System.Int64 _OrderID;
        partial void OnOrderIDChanging(global::System.Int64 value);
        partial void OnOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 OptID
        {
            get
            {
                return _OptID;
            }
            set
            {
                OnOptIDChanging(value);
                ReportPropertyChanging("OptID");
                _OptID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OptID");
                OnOptIDChanged();
            }
        }
        private global::System.Int64 _OptID;
        partial void OnOptIDChanging(global::System.Int64 value);
        partial void OnOptIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("coffeeModel", "FK_OrderOptions_Options", "Options")]
        public Options Options
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Options>("coffeeModel.FK_OrderOptions_Options", "Options").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Options>("coffeeModel.FK_OrderOptions_Options", "Options").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Options> OptionsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Options>("coffeeModel.FK_OrderOptions_Options", "Options");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Options>("coffeeModel.FK_OrderOptions_Options", "Options", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("coffeeModel", "FK_OrderOptions_Order", "Order")]
        public Order Order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("coffeeModel.FK_OrderOptions_Order", "Order").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("coffeeModel.FK_OrderOptions_Order", "Order").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Order> OrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("coffeeModel.FK_OrderOptions_Order", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Order>("coffeeModel.FK_OrderOptions_Order", "Order", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="coffeeModel", Name="OrderRecipe")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrderRecipe : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OrderRecipe object.
        /// </summary>
        /// <param name="orderRecID">Initial value of the OrderRecID property.</param>
        /// <param name="orderID">Initial value of the OrderID property.</param>
        /// <param name="recID">Initial value of the RecID property.</param>
        public static OrderRecipe CreateOrderRecipe(global::System.Int64 orderRecID, global::System.Int64 orderID, global::System.Int64 recID)
        {
            OrderRecipe orderRecipe = new OrderRecipe();
            orderRecipe.OrderRecID = orderRecID;
            orderRecipe.OrderID = orderID;
            orderRecipe.RecID = recID;
            return orderRecipe;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 OrderRecID
        {
            get
            {
                return _OrderRecID;
            }
            set
            {
                if (_OrderRecID != value)
                {
                    OnOrderRecIDChanging(value);
                    ReportPropertyChanging("OrderRecID");
                    _OrderRecID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OrderRecID");
                    OnOrderRecIDChanged();
                }
            }
        }
        private global::System.Int64 _OrderRecID;
        partial void OnOrderRecIDChanging(global::System.Int64 value);
        partial void OnOrderRecIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 OrderID
        {
            get
            {
                return _OrderID;
            }
            set
            {
                OnOrderIDChanging(value);
                ReportPropertyChanging("OrderID");
                _OrderID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderID");
                OnOrderIDChanged();
            }
        }
        private global::System.Int64 _OrderID;
        partial void OnOrderIDChanging(global::System.Int64 value);
        partial void OnOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RecID
        {
            get
            {
                return _RecID;
            }
            set
            {
                OnRecIDChanging(value);
                ReportPropertyChanging("RecID");
                _RecID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RecID");
                OnRecIDChanged();
            }
        }
        private global::System.Int64 _RecID;
        partial void OnRecIDChanging(global::System.Int64 value);
        partial void OnRecIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("coffeeModel", "FK_OrderRecipe_Order", "Order")]
        public Order Order
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("coffeeModel.FK_OrderRecipe_Order", "Order").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("coffeeModel.FK_OrderRecipe_Order", "Order").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Order> OrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Order>("coffeeModel.FK_OrderRecipe_Order", "Order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Order>("coffeeModel.FK_OrderRecipe_Order", "Order", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("coffeeModel", "FK_OrderRecipe_Recipe", "Recipe")]
        public Recipe Recipe
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Recipe>("coffeeModel.FK_OrderRecipe_Recipe", "Recipe").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Recipe>("coffeeModel.FK_OrderRecipe_Recipe", "Recipe").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Recipe> RecipeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Recipe>("coffeeModel.FK_OrderRecipe_Recipe", "Recipe");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Recipe>("coffeeModel.FK_OrderRecipe_Recipe", "Recipe", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="coffeeModel", Name="Recipe")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Recipe : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Recipe object.
        /// </summary>
        /// <param name="recID">Initial value of the RecID property.</param>
        /// <param name="recName">Initial value of the RecName property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="describe">Initial value of the Describe property.</param>
        public static Recipe CreateRecipe(global::System.Int64 recID, global::System.String recName, global::System.Decimal price, global::System.String describe)
        {
            Recipe recipe = new Recipe();
            recipe.RecID = recID;
            recipe.RecName = recName;
            recipe.Price = price;
            recipe.Describe = describe;
            return recipe;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RecID
        {
            get
            {
                return _RecID;
            }
            set
            {
                if (_RecID != value)
                {
                    OnRecIDChanging(value);
                    ReportPropertyChanging("RecID");
                    _RecID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RecID");
                    OnRecIDChanged();
                }
            }
        }
        private global::System.Int64 _RecID;
        partial void OnRecIDChanging(global::System.Int64 value);
        partial void OnRecIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RecName
        {
            get
            {
                return _RecName;
            }
            set
            {
                OnRecNameChanging(value);
                ReportPropertyChanging("RecName");
                _RecName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RecName");
                OnRecNameChanged();
            }
        }
        private global::System.String _RecName;
        partial void OnRecNameChanging(global::System.String value);
        partial void OnRecNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Decimal _Price;
        partial void OnPriceChanging(global::System.Decimal value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Describe
        {
            get
            {
                return _Describe;
            }
            set
            {
                OnDescribeChanging(value);
                ReportPropertyChanging("Describe");
                _Describe = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Describe");
                OnDescribeChanged();
            }
        }
        private global::System.String _Describe;
        partial void OnDescribeChanging(global::System.String value);
        partial void OnDescribeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Sort
        {
            get
            {
                return _Sort;
            }
            set
            {
                OnSortChanging(value);
                ReportPropertyChanging("Sort");
                _Sort = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Sort");
                OnSortChanged();
            }
        }
        private global::System.String _Sort;
        partial void OnSortChanging(global::System.String value);
        partial void OnSortChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("coffeeModel", "FK_Options_Recipe", "Options")]
        public EntityCollection<Options> Options
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Options>("coffeeModel.FK_Options_Recipe", "Options");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Options>("coffeeModel.FK_Options_Recipe", "Options", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("coffeeModel", "FK_OrderRecipe_Recipe", "OrderRecipe")]
        public EntityCollection<OrderRecipe> OrderRecipe
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderRecipe>("coffeeModel.FK_OrderRecipe_Recipe", "OrderRecipe");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderRecipe>("coffeeModel.FK_OrderRecipe_Recipe", "OrderRecipe", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("coffeeModel", "FK_itCart_Recipe", "itCart")]
        public EntityCollection<itCart> itCart
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<itCart>("coffeeModel.FK_itCart_Recipe", "itCart");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<itCart>("coffeeModel.FK_itCart_Recipe", "itCart", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="coffeeModel", Name="shipTo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class shipTo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new shipTo object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="orderDateTime">Initial value of the OrderDateTime property.</param>
        /// <param name="flImmediateBill">Initial value of the flImmediateBill property.</param>
        /// <param name="typeOfPay">Initial value of the typeOfPay property.</param>
        public static shipTo CreateshipTo(global::System.Int64 id, global::System.DateTime orderDateTime, global::System.Boolean flImmediateBill, global::System.Int32 typeOfPay)
        {
            shipTo shipTo = new shipTo();
            shipTo.ID = id;
            shipTo.OrderDateTime = orderDateTime;
            shipTo.flImmediateBill = flImmediateBill;
            shipTo.typeOfPay = typeOfPay;
            return shipTo;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> tableNum
        {
            get
            {
                return _tableNum;
            }
            set
            {
                OntableNumChanging(value);
                ReportPropertyChanging("tableNum");
                _tableNum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("tableNum");
                OntableNumChanged();
            }
        }
        private Nullable<global::System.Int16> _tableNum;
        partial void OntableNumChanging(Nullable<global::System.Int16> value);
        partial void OntableNumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime OrderDateTime
        {
            get
            {
                return _OrderDateTime;
            }
            set
            {
                OnOrderDateTimeChanging(value);
                ReportPropertyChanging("OrderDateTime");
                _OrderDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderDateTime");
                OnOrderDateTimeChanged();
            }
        }
        private global::System.DateTime _OrderDateTime;
        partial void OnOrderDateTimeChanging(global::System.DateTime value);
        partial void OnOrderDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String comment
        {
            get
            {
                return _comment;
            }
            set
            {
                OncommentChanging(value);
                ReportPropertyChanging("comment");
                _comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("comment");
                OncommentChanged();
            }
        }
        private global::System.String _comment;
        partial void OncommentChanging(global::System.String value);
        partial void OncommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean flImmediateBill
        {
            get
            {
                return _flImmediateBill;
            }
            set
            {
                OnflImmediateBillChanging(value);
                ReportPropertyChanging("flImmediateBill");
                _flImmediateBill = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("flImmediateBill");
                OnflImmediateBillChanged();
            }
        }
        private global::System.Boolean _flImmediateBill;
        partial void OnflImmediateBillChanging(global::System.Boolean value);
        partial void OnflImmediateBillChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 typeOfPay
        {
            get
            {
                return _typeOfPay;
            }
            set
            {
                OntypeOfPayChanging(value);
                ReportPropertyChanging("typeOfPay");
                _typeOfPay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("typeOfPay");
                OntypeOfPayChanged();
            }
        }
        private global::System.Int32 _typeOfPay;
        partial void OntypeOfPayChanging(global::System.Int32 value);
        partial void OntypeOfPayChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("coffeeModel", "FK_itCart_shipTo", "itCart")]
        public EntityCollection<itCart> itCart
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<itCart>("coffeeModel.FK_itCart_shipTo", "itCart");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<itCart>("coffeeModel.FK_itCart_shipTo", "itCart", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
